syntax = "proto3";

package Protocol;
option csharp_namespace = "Google.Protobuf.Protocol";

enum MsgId {
  S_ENTER_GAME = 0;
  C_EXIT_GAME = 1;
  S_ENTER_ROOM = 2;
  S_LEAVE_ROOM = 3;
  C_ENTER_POKEMON_LIST_SCENE = 40;
  S_ENTER_POKEMON_LIST_SCENE = 41;
  C_ENTER_POKEMON_BATTLE_SCENE = 42;
  S_ENTER_POKEMON_BATTLE_SCENE = 43;
  C_ENTER_PLAYER_BAG_SCENE = 44;
  S_ENTER_PLAYER_BAG_SCENE = 45;

  C_ENTER_POKEMON_EXCHANGE_SCENE = 400;
  S_ENTER_POKEMON_EXCHANGE_SCENE = 410;
  C_MOVE_EXCHANGE_CURSOR = 420;
  S_MOVE_EXCHANGE_CURSOR = 430;
  C_CHOOSE_EXCHANGE_POKEMON = 440;
  S_CHOOSE_EXCHANGE_POKEMON = 450;
  C_FINAL_ANSWER_TO_EXCHANGE = 460;
  S_FINAL_ANSWER_TO_EXCHANGE = 470;
  C_EXIT_POKEMON_EXCHANGE_SCENE = 480;
  S_EXIT_POKEMON_EXCHANGE_SCENE = 490;

  S_SPAWN = 5;
  S_DESPAWN = 6;
  C_MOVE = 7;
  S_MOVE = 8;
  C_CREATE_PLAYER = 9;
  S_SEND_TALK = 15;
  S_RECEIVE_TALK = 16;
  C_ADD_POKEMON = 10;
  S_ADD_POKEMON = 11;
  C_SWITCH_POKEMON = 12;
  C_ACCESS_POKEMON_SUMMARY = 13;
  S_ACCESS_POKEMON_SUMMARY = 14;
  
  C_USE_ITEM = 50;
  S_USE_ITEM = 51;
  C_USE_POKEMON_MOVE = 17;
  S_USE_POKEMON_MOVE = 18;

  C_SET_BATTLE_POKEMON_MOVE = 33;
  S_SET_BATTLE_POKEMON_MOVE = 34;
  
  S_SWITCH_BATTLE_POKEMON = 31;
  
  C_RETURN_GAME = 4;
  C_RETURN_POKEMON_BATTLE_SCENE = 72;
  S_RETURN_POKEMON_BATTLE_SCENE = 73;

  C_PLAYER_TALK = 70;
  S_SEND_TALK_REQUEST = 71;

  C_REQUEST_DATA_BY_ID = 60;
  S_GET_ENEMY_POKEMON_EXP = 61;
  S_CHECK_AND_APPLY_REMAINED_EXP = 62;
  S_ESCAPE_FROM_WILD_POKEMON = 63;
}

enum CreatureState {
  IDLE = 0;
  CHANGE_DIR = 1;
  WALK = 2;
  RUN = 3;
  WATCH_MENU = 4;
  FIGHT = 5;
  TALK = 6;
  EXCHANGING = 7;
}

enum MoveDir {
  UP = 0;
  DOWN = 1;
  LEFT = 2;
  RIGHT = 3;
}

enum GameObjectType {
  NONE = 0;
  PLAYER = 1;
  POKEMON = 2;
  PROJECTILE = 3;
}

message S_EnterGame {
}

message C_ExitGame {
	int32 objectId = 1;
}

message S_EnterRoom {
    PlayerInfo playerInfo = 1;
}

message S_LeaveRoom {
}

message C_ReturnGame {
    int32 playerId = 1;
}

message S_Spawn {
    repeated PlayerInfo players = 1;
}

message S_Despawn {
    repeated int32 objectIds = 1;
}

message C_Move {
    PositionInfo posInfo = 1;
}

message S_Move {
    int32 objectId = 1;
    PositionInfo posInfo = 2;
}

message C_CreatePlayer {
    PlayerGender gender = 1;
    string name = 2;
}

message S_SendTalk
{
    PlayerInfo otherPlayerInfo = 1;
}

message S_ReceiveTalk
{
    PlayerInfo playerInfo = 1;
}

message C_AddPokemon {
    int32 playerId = 1;
	string pokemonName = 2;
	string nickName = 3;
	int32 level = 4;
    int32 hp = 5;
}

message S_AddPokemon {
    PokemonSummary pokemonSum = 1;
}

message C_SwitchPokemon {
    int32 ownerId = 1;
    int32 pokemonFromIdx = 2;
    int32 pokemonToIdx = 3;
}

message C_EnterPokemonListScene
{
    int32 playerId = 1;
}

message S_EnterPokemonListScene
{
    PlayerInfo playerInfo = 1;
    repeated PokemonSummary pokemonSums = 2;
}

message C_AccessPokemonSummary
{
    int32 playerId = 1;
    int32 pokemonOrder = 2;
}

message S_AccessPokemonSummary
{
    PokemonSummary pokemonSum = 1;
}

message C_EnterPokemonBattleScene
{
    int32 playerId = 1;
    int32 locationNum = 2;
}

message S_EnterPokemonBattleScene
{
    PlayerInfo playerInfo = 1;
    PokemonSummary enemyPokemonSum = 2;
    repeated PokemonSummary playerPokemonSums = 3;
}

message C_EnterPokemonExchangeScene
{
    int32 playerId = 1;
}

message S_EnterPokemonExchangeScene
{
    PlayerInfo playerInfo = 1;
    PlayerInfo otherPlayerInfo = 2;
    repeated PokemonSummary myPokemonSums = 3;
    repeated PokemonSummary otherPokemonSums = 4;
    ExchangeCursorPos myCursorPos = 5;
    ExchangeCursorPos otherCursorPos = 6;
    PokemonSummary otherPokemonSum = 7;
}

message C_ChooseExchangePokemon
{
    int32 playerId = 1;
    int32 pokemonOrder = 2;
}

message S_ChooseExchangePokemon
{
    PokemonSummary otherPokemonSum = 1;
}

message C_FinalAnswerToExchange
{
    int32 playerId = 1;
    bool finalAnswer = 2;
}

message S_FinalAnswerToExchange
{
    PokemonSummary myPokemonSum = 1;
    PokemonSummary otherPokemonSum = 2;
}

message C_MoveExchangeCursor
{
    int32 playerId = 1;
    int32 x = 2;
    int32 y = 3;
}

message S_MoveExchangeCursor
{
    int32 x = 1;
    int32 y = 2;
}

message C_ExitPokemonExchangeScene
{
    int32 playerId = 1;
}

message S_ExitPokemonExchangeScene
{
    PlayerInfo exitPlayerInfo = 1;
}

message C_RequestDataById
{
    int32 playerId = 1;
    RequestType requestType = 2;
}

message C_PlayerTalk
{
    int32 playerId = 1;
    TalkRequestType talkRequestType = 2;
}

message S_SendTalkRequest
{
    TalkRequestType talkRequestType = 1;
}

enum RequestType
{
    CHECK_OBJECT_IN_MAP = 0;
    GET_ENEMY_POKEMON_EXP = 1;
    CHECK_AND_APPLY_REMAINED_EXP = 2;
    ESCAPE_FROM_WILD_POKEMON = 3;
}

enum TalkRequestType
{
    REQUEST_BATTLE = 0;
    REQUEST_EXCHANGE = 1;
    ACCEPT_BATTLE = 2;
    ACCEPT_EXCHANGE = 3;
    REJECT = 4;
    CANCEL_TALK = 5;
}

message C_UseItem
{
    int32 playerId = 1;
    ItemCategory itemCategory = 2;
    int32 itemOrder = 3;
}

message S_UseItem
{
    PlayerInfo playerInfo = 1;
    PokemonSummary enemyPokemonSum = 2;
    PokemonSummary playerPokemonSum = 3;
    ItemSummary usedItem = 4;
}

message C_EnterPlayerBagScene
{
    int32 playerId = 1;
}

message S_EnterPlayerBagScene
{
    PlayerInfo playerInfo = 1;
    map<int32, CategoryInventory> inventory = 2;
}

message C_SetBattlePokemonMove
{
    int32 playerId = 1;
    int32 moveOrder = 2;
}

message S_SetBattlePokemonMove
{
    int32 myMoveOrder = 1;
    int32 enemyMoveOrder = 2;
}

message C_UsePokemonMove
{
    int32 playerId = 1;
    int32 moveOrder = 2;
}

message S_UsePokemonMove
{
    bool isMyPokemon = 1;
    bool _isHit = 2;
    int32 remainedPP = 3;
    int32 remainedHp = 4;
    float typeEffectiveness = 5;
    PokemonStatusCondition pokemonStatus = 6;
    bool isCriticalHit = 7;
    bool isTurnFinish = 8;
}

message S_GetEnemyPokemonExp
{
    int32 exp = 1;
}

message S_CheckAndApplyRemainedExp
{
    int32 FinalExp = 1;
    PokemonExpInfo expInfo = 2;
    int32 pokemonLevel = 3;
    PokemonStat pokemonStat = 4;
    LevelUpStatusDiff statDiff = 5;
    PokemonMoveSummary newMoveSum = 6;
}

message S_EscapeFromWildPokemon
{
    bool canEscape = 1;
}

message S_SwitchBattlePokemon
{
    PlayerInfo playerInfo = 1;
    PokemonSummary enemyPokemonSum = 2;
    repeated PokemonSummary myPokemonSums = 3;
}

message C_ReturnPokemonBattleScene
{
    int32 playerId = 1;
}

message S_ReturnPokemonBattleScene
{
    PlayerInfo playerInfo = 1;
    PokemonSummary enemyPokemonSum = 2;
    repeated PokemonSummary myPokemonSums = 3;
}



message ObjectInfo {
  int32 objectId = 1;
  PositionInfo posInfo = 2;
}

message PlayerInfo {
    ObjectInfo objectInfo = 1;
    string playerName = 2;
    PlayerGender playerGender = 3;
}

message PositionInfo {
	CreatureState state = 1;
	MoveDir moveDir = 2;
	int32 posX = 3;
	int32 posY = 4;
}

message ExchangeCursorPos
{
    int32 x = 1;
    int32 y = 2;
}

message PokemonSummary
{
    PokemonInfo pokemonInfo = 1;
    PokemonStat pokemonStat = 2;
    PokemonExpInfo pokemonExpInfo = 3;
    repeated PokemonMoveSummary pokemonMoves = 4;
    PokemonMoveSummary noPPMove = 5;
}

message PokemonInfo
{
    int32 dictionaryNum = 1;
    string nickName = 2;
    string pokemonName = 3;
    // Item ball;
    int32 level = 4;
    PokemonGender gender = 5;

    string ownerName = 6;
    int32 ownerId = 7;
    PokemonType type1 = 8;
    PokemonType type2 = 9;
    PokemonStatusCondition pokemonStatus = 10;

    // Ability ability;

    PokemonNature nature = 11;
    int32 metLevel = 12;
    // string metMapName;
}

message PokemonStat {
	int32 hp = 1;
	int32 maxHp = 2;
	int32 attack = 3;
	int32 defense = 4;
	int32 specialAttack = 5;
	int32 specialDefense = 6;
	int32 speed = 7;
}

message PokemonExpInfo {
    int32 curExp = 1;
    int32 totalExp = 2;
    int32 remainExpToNextLevel = 3;
}

message PokemonMoveSummary
{
    string moveName = 1;
    int32 movePower = 2;
    int32 moveAccuracy = 3;
    float criticalRate = 4;
    int32 curPP = 5;
    int32 maxPP = 6;
    MoveCategory moveCategory = 7;
    PokemonType moveType = 8;
}

message CategoryInventory
{
    repeated ItemSummary categoryItemSums = 1;
}

message ItemSummary
{
    ItemCategory itemCategory = 1;
    string itemName = 2;
    string itemDescription = 3;
    int32 itemCnt = 4;
}

message LevelUpStatusDiff
{
    int32 MaxHP = 1;
    int32 Attack = 2;
    int32 Defense = 3;
    int32 SpecialAttack = 4;
    int32 SpecialDefense = 5;
    int32 Speed = 6;
}

enum PlayerGender
{
    PLAYER_MALE = 0;
    PLAYER_FEMALE = 1;
}

enum PokemonGender
{
    MALE = 0;
    FEMALE = 1;
    NEUTRAL = 2;
}

enum PokemonType
{
    NORMAL = 0;
    FIRE = 1;
    WATER = 2;
    ELECTR = 3;
    GRASS = 4;
    TYPE_NONE = 99;
}

enum PokemonNature
{
    HARDY = 0;
    ADAMANT = 2;
    BOLD = 5;
    DOCILE = 6;
    IMPISH = 7;
    MODEST = 10;
    BASHFUL = 12;
    CALM = 15;
    CAREFUL = 17;
    QUIRKY = 18;
    TIMID = 20;
    JOLLY = 22;
    SERIOUS = 24;
}

enum PokemonStatusCondition
{
    STATUS_NONE = 0;
    FAINTING = 1;
}

enum MoveCategory
{
    PHYSICAL = 0;
    SPECIAL = 1;
    OTHER = 2;
}

enum ItemCategory
{
    ITEM = 0;
    POKE_BALL = 1;
    TECHNICAL_MACHINE = 2;
    BERRY = 3;
    KEY_ITEM = 4;
}